{"version":3,"sources":["Filter/filter.module.css","ContactForm/ContactForm.module.css","ContactList/ContactList.js","Filter/Filter.js","ContactForm/ContactForm.js","App.js","index.js","ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","s","list","map","contact","item","name","number","button","type","onClick","id","Filter","value","onChangeFilter","filter","htmlFor","label","input","pattern","title","required","onInput","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","form","onSubmit","this","onChange","Component","App","searchName","find","toUpperCase","addContact","alert","nanoid","prevState","changeFilter","getVisibleContacts","toLowerCase","includes","removeContact","contactId","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec541609.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__c2Paf\",\"label\":\"filter_label__Im6LR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1d9yN\",\"label\":\"ContactForm_label__1sZDp\",\"input\":\"ContactForm_input__3yJNL\",\"button\":\"ContactForm_button__1kQlb\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(contact => (\r\n      <li className={s.item} key={contact.id}>\r\n        {contact.name + ':' + contact.number}\r\n        {\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './filter.module.css';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    // className={s.filter}\r\n    // className={s.label}\r\n    <div className={s.filter}>\r\n      <label htmlFor=\"name\" className={s.label}>\r\n        Find contact by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          value={value}\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onInput={e => {\r\n            onChangeFilter(e.target.value);\r\n          }}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { nanoid } from 'nanoid';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport ContactForm from './ContactForm/ContactForm';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n  searchName = value => {\r\n    return this.state.contacts.find(\r\n      item => item.name.toUpperCase() === value.toUpperCase(),\r\n    );\r\n  };\r\n\r\n  addContact = e => {\r\n    const { name } = e;\r\n    if (this.searchName(name)) {\r\n      alert(`${e.name} is already in contacts`);\r\n    } else {\r\n      const contact = {\r\n        ...e,\r\n        id: nanoid(),\r\n      };\r\n\r\n      this.setState(prevState => ({\r\n        contacts: [...prevState.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n\r\n  changeFilter = value => {\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contacts =>\r\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const visibleContacts = this.getVisibleContacts();\r\n    // console.log(this.getVisibleContacts());\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Phonebook</h1>\r\n\r\n        <ContactForm onAddContact={this.addContact} />\r\n        <h2 className=\"title\">Contacts</h2>\r\n        {contacts.length >= 2 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        {visibleContacts.length > 0 && (\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2PGDA\",\"item\":\"ContactList_item__1X9Y2\",\"button\":\"ContactList_button__1hQvE\"};"],"sourceRoot":""}