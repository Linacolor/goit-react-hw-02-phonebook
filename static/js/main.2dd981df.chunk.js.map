{"version":3,"sources":["Filter/filter.module.css","ContactForm/ContactForm.module.css","ContactList/ContactList.js","Filter/Filter.js","ContactForm/ContactForm.js","App.js","index.js","ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","s","list","map","contact","item","name","number","button","type","onClick","id","Filter","value","onChangeFilter","filter","label","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","form","onSubmit","this","input","Component","App","addContact","includes","alert","nanoid","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dd981df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__c2Paf\",\"label\":\"filter_label__Im6LR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1d9yN\",\"label\":\"ContactForm_label__1sZDp\",\"input\":\"ContactForm_input__3yJNL\",\"button\":\"ContactForm_button__1kQlb\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(contact => (\r\n      <li className={s.item} key={contact.id}>\r\n        {contact.name + ':' + contact.number}\r\n        {\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './filter.module.css';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className={s.filter}>\r\n      <span className={s.label}>Find contacts by name</span>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport ContactForm from './ContactForm/ContactForm';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = e => {\n    const searchName = this.state.contacts\n      .map(item => item.name)\n      .includes(e.name);\n\n    if (searchName) {\n      alert(`${e.name} is already in contacts`);\n    } else {\n      const contact = {\n        ...e,\n        id: nanoid(),\n      };\n\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2 className=\"title\">Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2PGDA\",\"item\":\"ContactList_item__1X9Y2\",\"button\":\"ContactList_button__1hQvE\"};"],"sourceRoot":""}